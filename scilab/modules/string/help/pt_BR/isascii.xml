<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) INRIA -
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 * Copyright (C) 2020 - Samuel GOUGEON
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:scilab="http://www.scilab.org"
          xml:id="isascii" xml:lang="pt">
    <refnamediv>
        <refname>isascii</refname>
        <refpurpose>
            Testa se cada caractere de strings fornecidas é do tipo 7-bit US-ASCII
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Seqüência de Chamamento</title>
        <synopsis>res = isascii(str)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Parâmetros</title>
        <variablelist>
            <varlistentry>
                <term>str</term>
                <listitem>
                    <para>string</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>res</term>
                <listitem>
                    <para>uma matriz de booleanos</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Descrição</title>
        <para>
            <literal>res = isascii(str)</literal> retorna verdadeiro (%T) se c é
            um código 7-bit US-ASCII entre 0 e 0177 octal, inclusive. Caso contrário,
            retorna falso (%F).
        </para>
    </refsection>
    <refsection>
        <title>Exemplos</title>
        <programlisting role="example"><![CDATA[
isascii("Señor")

nt = ascii("Señor")
isascii(nt)

t = "We know that γ² = 1/(1-β²)";
isascii(t)
part(t, find(~isascii(t)))
     ]]></programlisting>
        <screen><![CDATA[
--> isascii("Señor")
 ans  =
  T T F T T

--> nt = ascii("Señor")
 nt  =
   83.   101.   195.   177.   111.   114.

--> isascii(nt)
 ans  =
  T T F F T T


--> t = "We know that γ² = 1/(1-β²)";
--> isascii(t)
 ans  =
  T T T T T T T T T T T T T F F T T T T T T T T F F T

--> part(t, find(~isascii(t)))
 ans  =
  "γ²β²"
]]></screen>
        <para>
            Tabs, New lines, etc are special but anyway US-ascii characters.
            Non-breakable spaces char(160) are not US-ascii:
        </para>
        <programlisting role="example"><![CDATA[
t = "a" + char(160) + "b" + ascii(9) + " EOL:" + ascii(10) + "Next"
isascii(t)
ascii(t)
     ]]></programlisting>
        <screen><![CDATA[
--> t = "a" + char(160) + "b" + ascii(9) + " EOL:" + ascii(10) + "Next"
 t  =
  "a b	 EOL:
Next"

--> isascii(t)
 ans  =
  T F T T T T T T T T T T T T

--> ascii(t)
 ans  =
   97.  194.  160.  98.  9.  32.  69.  79.  76.  58.  10.  78.  101.  120.  116.
]]></screen>
    </refsection>
    <refsection role="see also">
        <title>Ver Também</title>
        <simplelist type="inline">
            <member>
                <link linkend="ascii">ascii</link>
            </member>
            <member>
                <link linkend="isalphanum">isalphanum</link>
            </member>
            <member>
                <link linkend="isdigit">isdigit</link>
            </member>
            <member>
                <link linkend="isletter">isletter</link>
            </member>
            <member>
                <link linkend="isnum">isnum</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
