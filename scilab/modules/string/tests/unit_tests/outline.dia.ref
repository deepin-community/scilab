// =============================================================================
// Scilab ( https://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2024 - UTC - Stephane MOTTELET
//
data.d0 = [];
data.d = 1;
data.D = rand(5, 5);
data.b = %t;
data.B = [%t %f;%f %t];
data.s = "outline";
data.S = ["outline" "outline";"outline", "outline"];
data.i8 = int8(1);
data.I8 = int8([1 2 3 4]);
data.i16 = int16(1);
data.I16 = int16([1 2 3 4]);
data.i32 = int32(1);
data.I32 = int32([1 2 3 4]);
data.i64 = int64(1);
data.I64 = int64([1 2 3 4]);
data.l = list();
data.L = list(1, 2, 3);
data.ce0 = {[]};
data.ce = {[1 2 3 4], ["outline"]};
data.p = %s;
data.P = [%s %s;%s %s];
data.r = 1/%s;
data.R = 1 ./ [%s %s;%s %s];
data.sp = sparse([1 2 3]);
data.spb = sparse([1 2 3] > 1);
data.st0 = struct();
data.st = struct("a", [1 2 3]);
data.ST = [struct("a", [1 2 3]) struct("a", [1 2 3]) struct("a", [1 2 3])];
data.ST0 = [struct() struct() struct()];
data.h = plot(1:10);
data.H = [plot(1:10) plot(1:10)];
data.tl0 = tlist(["e"]);
data.tl = tlist(["e","x"],1);
data.ml0 = mlist(["e"]);
data.ml = mlist(["e","x"],1);
jimport java.lang.String;
data.j = String.new("Hello world");
data.x = xmlReadStr("<root><a att=""foo"" rib=""bar""><b>Hello</b></a></root>");
data.dt = datetime();
data.DT = [datetime() datetime() datetime()];
data.dura = duration(1);
data.caldura = caldays(1);
data.DURA = [duration(1) duration(1) duration(1)];
data.DT = [datetime() datetime() datetime()];
data.table = table(["AF"; "NA"], ["Africa"; "North America"]);
data.ts = timeseries(hours(1:2)', ["AF"; "NA"], ["Africa"; "North America"]);
data
 data = [struct] with fields:
  d0 = []
  d = 1
  D: [5x5 double]
  b = %t
  B = [%t,%f;%f,%t]
  s = "outline"
  S: [2x2 string]
  i8 = int8(1)
  I8 = int8([1,2,3,4])
  i16 = int16(1)
  I16 = int16([1,2,3,4])
  i32 = int32(1)
  I32 = int32([1,2,3,4])
  i64 = int64(1)
  I64 = int64([1,2,3,4])
  l: (empty list)
  L: (3-elements list)
      (1) = 1
      (2) = 2
      (3) = 3
  ce0 = {[]}
  ce = {[1,2,3,4],"outline"}
  p = %s
  P = [%s,%s;%s,%s]
  r: [rational]
  R: [2x2 rational]
  sp = sparse([1,1;1,2;1,3],[1;2;3],[1,3])
  spb = sparse([1,2;1,3],[%t;%t],[1,3])
  st0: [0x0 struct] with no field
  st: [struct] with fields:
      a = [1,2,3]
  ST: [1x3 struct] with fields:
      a
  ST0: [0x0 struct] with no field
  h: [Polyline]
  H: [1x2 handle]
  tl0: (e tlist)
  tl: (e tlist) with fields:
      x = 1
  ml0: (e mlist)
  ml: (e mlist) with fields:
      x = 1
  j: (Java Object)
  x: (XMLDoc) with fields:
  dt: [datetime]
  DT: [1x3 datetime]
  dura: [duration]
  caldura: [calendarDuration]
  DURA: [1x3 duration]
  table: [2x2 table]
  ts: [2x2 timeseries]
data.tlist1 = tlist(["t1", "x"], 1);
data.mlist1 = mlist(["t1", "x"], 2);
data.tlist2 = tlist(["t2", "x"], 1);
data.mlist2 = mlist(["t2", "x"], 2);
function %t1_p(x), disp("test");end
function %t2_p(x), disp("test");end
function s = %t2_outline(x, verbose), s = "t2 outline";end
//mode cannot be check in test, test_run remove empty lines in dia.ref
for i = fieldnames(data)'
	data(i)
	disp(data(i))
end
 ans = 
    []
    []
 ans = 
   1.
   1.
 ans = [5x5 double]
   0.2113249   0.6283918   0.5608486   0.2320748   0.3076091
   0.7560439   0.8497452   0.6623569   0.2312237   0.9329616
   0.0002211   0.685731    0.7263507   0.2164633   0.2146008
   0.3303271   0.8782165   0.1985144   0.8833888   0.312642 
   0.6653811   0.068374    0.5442573   0.6525135   0.3616361
   0.2113249   0.6283918   0.5608486   0.2320748   0.3076091
   0.7560439   0.8497452   0.6623569   0.2312237   0.9329616
   0.0002211   0.685731    0.7263507   0.2164633   0.2146008
   0.3303271   0.8782165   0.1985144   0.8833888   0.312642 
   0.6653811   0.068374    0.5442573   0.6525135   0.3616361
 ans = 
  T
  T
 ans = [2x2 boolean]
  T F
  F T
  T F
  F T
 ans = 
  "outline"
  "outline"
 ans = [2x2 string]
  "outline"  "outline"
  "outline"  "outline"
  "outline"  "outline"
  "outline"  "outline"
 ans = [int8]
  1
  1
 ans = [1x4 int8]
  1  2  3  4
  1  2  3  4
 ans = [int16]
  1
  1
 ans = [1x4 int16]
  1  2  3  4
  1  2  3  4
 ans = [int32]
  1
  1
 ans = [1x4 int32]
  1  2  3  4
  1  2  3  4
 ans = [int64]
  1
  1
 ans = [1x4 int64]
  1  2  3  4
  1  2  3  4
 ans = (empty list)
 ans = (3-elements list)
  (1) = 1
  (2) = 2
  (3) = 3
  (1) = 1
  (2) = 2
  (3) = 3
 ans = {1x1 cell}
  []
  []
 ans = {1x2 cell}
  [1,2,3,4]    "outline"
  [1,2,3,4]    "outline"
 ans = [polynomial] of s
  s
  s
 ans = [2x2 polynomial] of s
  s  s
  s  s
  s  s
  s  s
 ans = [rational] of s
   1  
   -  
   s  
   1  
   -  
   s  
 ans = [2x2 rational] of s
   1  1  
   -  -  
   s  s  
   1  1  
   -  -  
   s  s  
   1  1  
   -  -  
   s  s  
   1  1  
   -  -  
   s  s  
 ans = [1x3 sparse]
(  1,  1)	  1.
(  1,  2)	  2.
(  1,  3)	  3.
  [1x3 sparse]
(  1,  1)	  1.
(  1,  2)	  2.
(  1,  3)	  3.
 ans = [1x3 boolean sparse]
(  1,  2)	T
(  1,  3)	T
  [1x3 boolean sparse]
(  1,  2)	T
(  1,  3)	T
 ans = [0x0 struct] with no field
  [0x0 struct] with no field
 ans = [struct] with fields:
  a = [1,2,3]
  [struct] with fields:
  a = [1,2,3]
 ans = [1x3 struct] with fields:
  a
  [1x3 struct] with fields:
  a
 ans = [0x0 struct] with no field
  [0x0 struct] with no field
 ans = [Polyline] with properties:
  parent: [Compound]
  children = []
  datatips = []
  datatip_display_mode = "always"
  display_function = ""
  display_function_data = []
  visible = "on"
  data: [10x2 double]
  closed = "off"
  line_mode = "on"
  fill_mode = "off"
  line_style = 1
  thickness = 1
  arrow_size_factor = 1
  polyline_style = 1
  foreground = 2
  background = -2
  interp_color_vector = []
  interp_color_mode = "off"
  colors = []
  mark_mode = "off"
  mark_style = 0
  mark_size_unit = "point"
  mark_size = 0
  mark_foreground = -1
  mark_background = -2
  mark_offset = 0
  mark_stride = 1
  x_shift = []
  y_shift = []
  z_shift = []
  bar_width = 0
  clip_state = "clipgrf"
  clip_box = []
  user_data = []
  tag = ""
  [Polyline] with properties:
  parent: [Compound]
  children = []
  datatips = []
  datatip_display_mode = "always"
  display_function = ""
  display_function_data = []
  visible = "on"
  data: [10x2 double]
  closed = "off"
  line_mode = "on"
  fill_mode = "off"
  line_style = 1
  thickness = 1
  arrow_size_factor = 1
  polyline_style = 1
  foreground = 2
  background = -2
  interp_color_vector = []
  interp_color_mode = "off"
  colors = []
  mark_mode = "off"
  mark_style = 0
  mark_size_unit = "point"
  mark_size = 0
  mark_foreground = -1
  mark_background = -2
  mark_offset = 0
  mark_stride = 1
  x_shift = []
  y_shift = []
  z_shift = []
  bar_width = 0
  clip_state = "clipgrf"
  clip_box = []
  user_data = []
  tag = ""
 ans = [1x2 handle]
  Polyline Polyline 
  [1x2 handle]
  Polyline Polyline 
 ans = (e tlist)
  (1) = "e"
  (1) = "e"
 ans = (e tlist) with fields:
  x = 1
  x = 1
 ans = (e mlist)
  (1) = "e"
  (1) = "e"
 ans = (e mlist) with fields:
  x = 1
  x = 1
 ans = (Java Object)
Hello world
  (Java Object)
Hello world
 ans = (XMLDoc) with fields:
  url = "Undefined"
  root: (XMLElem)
  (XMLDoc) with fields:
  url = "Undefined"
  root: (XMLElem)
 ans = [datetime]
   2024-05-17 16:39:19.235
   2024-05-17 16:39:19.235
 ans = [1x3 datetime]
         column 1 to 2
   2024-05-17 16:39:19.242   2024-05-17 16:39:19.242
         column 3 to 3
   2024-05-17 16:39:19.242
         column 1 to 2
   2024-05-17 16:39:19.242   2024-05-17 16:39:19.242
         column 3 to 3
   2024-05-17 16:39:19.242
 ans = [duration]
   01:00:00
   01:00:00
 ans = [calendarDuration]
    1d
    1d
 ans = [1x3 duration]
   01:00:00   01:00:00   01:00:00
   01:00:00   01:00:00   01:00:00
 ans = [2x2 table]
   Var1       Var2     
   ____   _____________
                       
   AF     Africa       
   NA     North America
   Var1       Var2     
   ____   _____________
                       
   AF     Africa       
   NA     North America
 ans = [2x2 timeseries]
     Time     Var1       Var2     
   ________   ____   _____________
                                  
   01:00:00   AF     Africa       
   02:00:00   NA     North America
     Time     Var1       Var2     
   ________   ____   _____________
                                  
   01:00:00   AF     Africa       
   02:00:00   NA     North America
 ans = (t1 tlist) with fields:
  "test"
  "test"
 ans = (t1 mlist) with fields:
  "test"
  "test"
 ans = t2 outline
  "test"
  "test"
 ans = t2 outline
  "test"
  "test"
