<?xml version="1.0" encoding="UTF-8"?>
<!--
* Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
* Copyright (C) 2002-2004 - INRIA - Vincent COUVERT
* Copyright (C) 2012 - 2016 - Scilab Enterprises
* Copyright (C) 2020 - Samuel GOUGEON
*
* This file is hereby licensed under the terms of the GNU GPL v2.0,
* pursuant to article 5.3.4 of the CeCILL v.2.1.
* This file was originally licensed under the terms of the CeCILL v2.1,
* and continues to be available under such terms.
* For more information, see the COPYING file which you should have received
* along with this program.
*
-->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"
          xml:lang="fr" xml:id="m2scideclare">
    <refnamediv>
        <refname>m2scideclare</refname>
        <refpurpose>Donner des indices pour aider M2SCI...</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntaxe</title>
        <synopsis>
            %m2scideclare variable_name|sizes|data_type|property
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>variable_name</term>
                <listitem>
                    <para>
                        nom de la variable déclarée.
                        Ce nom peut être un champ de Struct (e.g. <literal>x(1,2).nom</literal>)
                        ou décrire le contenu d'une Cell en utilisant la syntaxe
                        <literal>x(1,2).entries</literal>.
                        <note>
                            NOTEZ que pour les Cells et les
                            Structs <literal>*</literal> peut être utilisé comme index.
                        </note>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>sizes</term>
                <listitem>
                    <para>
                        Tailles de la variable déclarée, séparées par des espaces.
                        Si une taille est inconnue, la remplacer par <literal>?</literal>.
                        <warning>
                            NOTER qu'une chaînes de caractères Matlab (définies entre apostrophes)
                            est considérée comme un vecteur de caractères adressables un à un.
                            En conséquence, la taille de 'string' est <literal>|1 6|</literal>
                            (non <literal>|1 1|</literal>).
                        </warning>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>data_type &amp; property</term>
                <listitem>
                    <para>
                        Type et sous-type de la variable. Les valeurs possibles sont présentées
                        dans la page décrivant <link linkend="Type">Type</link>.
                    </para>
                    <note>
                        Les valeurs de propriétés qui ne sont pas prédéfinies comme constantes
                        dans m2ci -- telles que 'int8' ou 'Axes' -- doivent être  spécifiées
                        sans apostrophes ni guillements dans la ligne %m2scideclare.
                    </note>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            La conversion des expressions du langage Matlab en équivalent Scilab dépend notamment
            du type et de la taille des objets impliqués.
            Plus le convertisseur M2SCI (<literal>mfile2sci</literal>) connait ces informations,
            plus précise et directe sera la conversion.
        </para>
        <para>
            Dés lors que les données originelles sont littéralement définies dans le
            code Matlab à convertir -- comme dans l'instruction <literal>a = [1 3 5]</literal>
            indiquant directement le vtype==Double, la property=Real, et la taille
            <literal>|1 3|</literal>, M2SCI sait alors tout
            ce qu'il faut savoir à propos de <literal>a</literal> pour convertir les expressions
            ultérieures dans lesquelles <literal>a</literal> intervient.
        </para>
        <para>
            Cependant, l'information manque fréquemment. En particulier, en tête des
            macros, le type et les dimensions des arguments d'entrée ne sont pas donnés (pouvoir
            s'en abstenir est d'ailleurs un des avantages/soulagements des langages évolués tels
            que Matlab ou Scilab).
            Des lignes d'instructions <literal>%m2scideclare</literal> peuvent être alors ajoutées
            (en commentaire Matlab, donc) pour donner ces informations au convertisseur, avant de
            lancer celui-ci.
        </para>
        <para>
            Lors de la conversion, lorsqu'une ligne <literal>%m2scideclare</literal> est rencontrée,
            le convertisseur examine la liste des symboles déjà connus. Cette liste est établie
            au cours de la conversion et est continuellement mise à jour, en fonction des symboles
            déjà rencontrés et convertis, et des lignes  <literal>%m2scideclare</literal> antérieures
            déjà prises en compte :
            <itemizedlist>
                <listitem>
                    <para>
                        Si <literal>%m2scideclare</literal> décrit une nouvelle donnée, celle-ci est
                        ajoutée à la liste des objets partiellement ou totalement connus.
                    </para>
                </listitem>
                <listitem>
                    <para>
                    Si l'objet décrit par <literal>%m2scideclare</literal> est déjà connu,
                    le convertisseur compare les informations apportées par <literal>%m2scideclare</literal>
                    avec celles déjà connues.
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para>
                            Si ces informations coincident ou sont compatibles, le convertisseur
                            éventuellement complète le registre (par exemple si la property était Unknown
                            et est précisée par <literal>%m2scideclare</literal>), ou ne fait rien.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                            Sinon, une ligne d'alerte est générée par <literal>%m2scideclare</literal>
                            dans le fichier converti, et les informations données par
                            <literal>%m2scideclare</literal> sont ignorées.
                            </para>
                        </listitem>
                    </itemizedlist>
                    <note>
                        Ce fonctionnement peut être mis à profit par les développeurs souhaitant
                        corriger ou étendre le convertisseur, en utilisant
                        <literal>%m2scideclare</literal> dans les tests : si le type, le sous-type
                        ou les dimensions de l'objet considéré ne sont pas ceux attendus et donnés
                        par <literal>%m2scideclare</literal>, l'alerte générée sera exploitée pour
                        corriger le convertisseur.
                    </note>
                    <para>
                        Si en tant qu'utilisateur du convertisseur vous rencontrez une telle alerte
                        <literal>%m2scideclare</literal> qui vous semble incompatible avec ce que
                        vous connaissez de votre code,
                        vous pouvez rapporter le cas sur https://bugzilla.scilab.org
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </refsection>
    <refsection>
        <title>Exemples</title>
           <itemizedlist>
              <listitem>
                <literal>%m2scideclare var1|2 3|Double|Real</literal>
                <para>
                  var1 est déclarée comme une matrice de Doubles de taille 2x3
                  et contenant des données réelles
                </para>
              </listitem>
              <listitem>
                <literal>%m2scideclare var2|2 3 10|Double|Complex</literal>
                <para>
                  var2 est déclarée comme une hypermatrice de Doubles de taille 2x3x10
                  et contenant des nombres complexes.
                </para>
              </listitem>
              <listitem>
                <literal>%m2scideclare var3(1,2).name|1 10|String|?</literal>
                <para>
                  var3 est déclarée comme un tableau de Structs contenant une chaîne de
                  caractères de taille 1x10 dans le champ 'name' de la Struct à l'indice (1,2)
                </para>
              </listitem>
              <listitem>
                <literal>%m2scideclare var4(1,5).entries|1 ?|Boolean|?</literal>
                <para>
                  var4 est déclarée comme un tableau de Cells contenant
                  un vecteur ligne de booléens à l'indice (1,5)
                </para>
              </listitem>
              <listitem>
                <literal>%m2scideclare var4(1,6).entries|? ?|Int|?</literal>
                <para>
                  var4 est déclarée comme un tableau de Cells contenant un vecteur ligne de
                  booléens à l'indice (1,5) et des données entières à l'indice (1,6).
                </para>
              </listitem>
              <listitem>
                <literal>%m2scideclare var5(*,*).name|1 ?|String|?</literal>
                <para>
                  var5 est déclarée comme un tableau de Structs contenant une
                  chaîne de caractères de taille 1xn dans chaque champ 'name'
                </para>
              </listitem>
              <listitem>
                <literal>%m2scideclare var6(2,*).entries|1 3|Double|Real</literal>
                <para>
                  var6 est déclarée comme un tableau de Cells contenant un
                  veteur de Doubles de taille 1x3 dans chaque élement de sa
                  seconde ligne.
                </para>
              </listitem>
          </itemizedlist>
    </refsection>
    <refsection role="see also">
        <title>Voir aussi</title>
        <simplelist type="inline">
            <member>
                <link linkend="Type">Type</link>
            </member>
        </simplelist>
    </refsection>
    <refsection role="history">
        <title>Historique</title>
        <revhistory>
            <revision>
                <revnumber>&lt; 5.0</revnumber>
                <revdescription>
                    <literal>%m2sciassume</literal> est obsolète et est remplacée par
                    <literal>m2scideclare</literal>.
                </revdescription>
            </revision>
            <revision>
                <revnumber>6.1.1</revnumber>
                <revdescription>
                    <literal>m2scideclare</literal> accepte tous les nouveaux vtypes et valeurs de
                    sous-types
                    <literal>Polynomial</literal>,
                    <literal>Function/Macro</literal>, <literal>Function/Builtin</literal>,
                    <literal>String/Char</literal>,
                    <literal>Handle/'Figure'</literal>, <literal>Handle/'Axes'</literal>,
                    <literal>Int/'int8'</literal>,  <literal>Int/'int16'</literal>,
                    <literal>Int/'int32'</literal>, <literal>Int/'int64'</literal>,
                    <literal>Int/'uint8'</literal>, <literal>Int/'uint16'</literal>,
                    <literal>Int/'uint32'</literal>, <literal>Int/'uint64'</literal>,
                    <literal>Sparse/Boolean</literal>.
                    Le vtype <literal>Sparse</literal> devient effectivement utilisable.
                </revdescription>
            </revision>
        </revhistory>
    </refsection>
</refentry>
