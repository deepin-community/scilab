<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * This file is released under the 3-clause BSD license. See COPYING-BSD.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" 
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" 
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" 
          version="5.0-subset Scilab" xml:id="table" xml:lang="en">
    <refnamediv>
        <refname>table</refname>
        <refpurpose>create a table from variables</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            t = table(var1, ..., varN)
            t = table(m)
            t = table(st)

            t = table(..., Name, Value)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>var1, ..., varN</term>
                <listitem>
                    <para>vector or matrix with the same number of rows.</para>
                    <para>Each var can be different type: double, boolean, string, datetime or duration</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>m</term>
                <listitem>
                    <para>double, boolean, string, datetime or duration matrix</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>st</term>
                <listitem>
                    <para>structure</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Name, Value</term>
                <listitem>
                    <para><emphasis role="bold">'VariableNames'</emphasis>: matrix of strings that contains the name of each column of <literal>t</literal>. Default value: ["Var1", ..., "VarN"]</para>
                    <para/>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">'RowNames'</emphasis>: indicator for reading the first column as row names</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>t</term>
                <listitem>
                    <para>table object.</para>
                    <para/>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            table is a data type used to store heterogeneous data. Each column of the table represents a variable, named VarN 
            (N: column number) by default. Each variable in a table can have different data type. They must all have the 
            same number of rows. Variable names are unique.
        </para>
        <para>
            Regarding the extraction and insertion of data, a table is like a matrix: t(i,j) where i and j are indices.
            In addition to indices, it is possible to use the names of variables and rows to access the data: t.Var1 or t("Var1") where 
            "Var1" is a variable name; t("Row1", "Var1") where "Row1" is a row name and "Var1" is a variable name. It is also possible to 
            mix indices and variable name or row name: t(1,["Var1", "Var3"]) or t("Row1", [1 3]). The data being generally heterogeneous, it will be
            neccesary to use {} or table to insert data. If they are of the same type, the [] will preferred.
        </para>
        <para>
            Use the <link linkend="readtable"></link> function to create a table from a file. If data contains a timestamp, use the <link linkend="timeseries">timeseries</link> function instead.
        </para>
        <para>
            <emphasis role="bold">t = table(var1, ..., varN)</emphasis> creates a table from the data variables <emphasis role="bold">var1, ..., varN</emphasis>.
            The variables can be column vector or matrix with the same number of rows. Each var1, ..., varN can be different type.
        </para>
        <para>
            <emphasis role="bold">t = table(m)</emphasis> creates a table from a matrix <emphasis role="bold">m</emphasis>.
            This syntaxe corresponds to <emphasis role="bold">t = <link linkend="matrix2table"></link>(st)</emphasis>.
        </para>
        <para>
            <emphasis role="bold">t = table(st)</emphasis> creates a table from a structure <emphasis role="bold">st</emphasis>.
            This syntaxe corresponds to <emphasis role="bold">t = <link linkend="struct2table"></link>(st)</emphasis>.
        </para>
        <para>
            <emphasis role="bold">t = table(..., Name, Value)</emphasis> can be used to specify the variable names or the row names.
        </para>
        <itemizedlist>
            <listitem>
                <para><emphasis role="bold">'VariableNames'</emphasis>: specify the name of variables. It is a row vector and the number of names 
                must be equal the number of table variables. This data is stored in the properties of the table <emphasis role="bold">t</emphasis> in the 'VariableNames' field. 
                For more information, see the Properties section below.</para>
                <para/>
            </listitem>
            <listitem>
                <para><emphasis role="bold">'RowNames'</emphasis>: specify the name of rows. The number of names 
                must be equal the number of table rows. This data is stored in the properties of the table <emphasis role="bold">t</emphasis> in the 'RowNames' field.
                For more information, see the Properties section below.</para>
                <para/>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection>
        <title>Table Properties</title>
        <para><emphasis role="bold">t</emphasis> contains several properties used to describe the index and the variables.</para>
        <para>These properties can be accessed/modified by using <emphasis role="bold">Properties</emphasis> field of t. </para>
        <para>Here is the list of available fields in <emphasis role="bold">t.Properties</emphasis>:</para>
        <itemizedlist>
            <listitem>
                <para><emphasis role="bold">Description</emphasis>: contains the description of the table. Default value: "".</para>
                <para/>
            </listitem>
            <listitem>
                <para><emphasis role="bold">VariableNames</emphasis>: contains the variable names of the table. Default value: ["Var1", ..., "VarN"].</para>
                <para/>
            </listitem>
            <listitem>
                <para><emphasis role="bold">VariableDescriptions</emphasis>: contains the variable descriptions of the table. One description by variable. Default value: "".</para>
                <para/>
            </listitem>
            <listitem>
                <para><emphasis role="bold">VariableUnits</emphasis>: contains the variable units of the table. Default value: "".</para>
                <para/>
            </listitem>
            <listitem>
                <para><emphasis role="bold">RowNames</emphasis>: contains the row names of the table. Default value: ""</para>
                <para/>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <para><emphasis role="bold">t = table(var1, ..., varN) with var1, ..., varN are column vectors</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
            Code = ["AF"; "NA"; "OC"; "AN"; "AS"; "EU"; "SA"];
            NameContinent = ["Africa"; "North America"; "Oceania"; "Antarctica"; "Asia"; "Europe"; "South America"];
            Area = [30065000; 24256000; 7687000; 13209000; 44579000; 9938000; 17819000]; // in km2
            NumberCountry = [54; 23; 14; %nan; 47; 45; 12]; 
            LifeExpectancy = [60; 78; 75; %nan; 72; 75; 74]; // in years

            t = table(Code, NameContinent, Area, NumberCountry, LifeExpectancy)
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">t = table(var1, ..., varN, "VariableNames", Value)</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
            Code = ["AF"; "NA"; "OC"; "AN"; "AS"; "EU"; "SA"];
            NameContinent = ["Africa"; "North America"; "Oceania"; "Antarctica"; "Asia"; "Europe"; "South America"];
            Area = [30065000; 24256000; 7687000; 13209000; 44579000; 9938000; 17819000]; // in km2
            NumberCountry = [54; 23; 14; %nan; 47; 45; 12]; 
            LifeExpectancy = [60; 78; 75; %nan; 72; 75; 74]; // in years

            t = table(Code, NameContinent, Area, NumberCountry, LifeExpectancy, ...
                "VariableNames", ["Code", "NameContinent", "Area", "NumberCountry", "LifeExpectancy"])

            t.Properties

            // Add a description to the table
            t.Properties.Description = "table of the 7 continents"

            // Add variableunits to the table
            t.Properties.VariableUnits(3) = "km2"
            t.Properties.VariableUnits($) = "years"

            t.Properties
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">t = table(var1, ..., varN, "VariableNames", Value, "RowNames", Value)</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
            Code = ["AF"; "NA"; "OC"; "AN"; "AS"; "EU"; "SA"];
            NameContinent = ["Africa"; "North America"; "Oceania"; "Antarctica"; "Asia"; "Europe"; "South America"];
            Area = [30065000; 24256000; 7687000; 13209000; 44579000; 9938000; 17819000]; // in km2
            NumberCountry = [54; 23; 14; %nan; 47; 45; 12]; 
            LifeExpectancy = [60; 78; 75; %nan; 72; 75; 74]; // in years

            t = table(Code, NameContinent, Area, NumberCountry, LifeExpectancy, ...
                "VariableNames", ["Code", "NameContinent", "Area", "NumberCountry", "LifeExpectancy"])

            t.Row
            t.Row = Code
            t.Code = [];
            t(["NA", "SA"], :)

            t = table(NameContinent, Area, NumberCountry, LifeExpectancy, ...
                "VariableNames", ["NameContinent", "Area", "NumberCountry", "LifeExpectancy"], "RowNames", Code)
            
            t.Properties.RowNames
            t("NA", ["NameContinent", "NumberCountry"])
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">Access to data in the table</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
            rand("seed", 0)
            x = ["a"; "b"; "b"; "c"; "a"];
            x1 = floor(rand(5,1)*5)-1.5;
            x2 = -floor(rand(5,1)*5)+0.5;
            t = table(x, x1, x2, "VariableNames", ["x", "x1", "x2"])
            t.x1
            t(["x1", "x2"])

            t([1 3 5], 2)
            t(6,:) = {"d", 2, -2}
            t.x4 = (1:6)'
        ]]>
        </programlisting>
        </para>
    </refsection>
    <refsection role="see also">
        <title>See also</title>
        <simplelist type="inline">
            <member>
                <link linkend="readtable">readtable</link>
            </member>
            <member>
                <link linkend="writetable">writetable</link>
            </member>
            <member>
                <link linkend="timeseries">timeseries</link>
            </member>
        </simplelist>
    </refsection>
    <refsection role="history">
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>2024.0.0</revnumber>
                <revdescription>
                    Introduction in Scilab.
                </revdescription>
            </revision>
        </revhistory>
    </refsection>
</refentry>
