<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * This file is released under the 3-clause BSD license. See COPYING-BSD.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" 
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" 
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" 
          version="5.0-subset Scilab" xml:id="table2struct" xml:lang="en">
    <refnamediv>
        <refname>table2struct</refname>
        <refpurpose>convert a table into a struct</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            st = table2struct(t)
            st = table2struct(t, "ToScalar", %t)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>t</term>
                <listitem>
                    <para>table object</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>st</term>
                <listitem>
                    <para>structure</para>
                    <para/>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <emphasis role="bold">table2struct</emphasis> converts a table into a structure.
            The data of t can be heterogeneous. Each variable in t becomes a fieldanmes in st. 
            If the size of t is [m,n] then st will be m x 1 structure array with n fieldnames.
            If t is a table with row names, then the data is lost.
        </para>
        <para>
            <emphasis role="bold">st = table2struct(t, "ToScalar", %t)</emphasis> converts the table t to a
             scalar structure st, i.e, if the size of t is [m, n] then st will have n fieldnames and each fieldname will have m rows.
        </para>
        <para/>
    </refsection>
    <refsection>
        <title>Examples</title>
        <para>
        <programlisting role="example"><![CDATA[
            Code = ["AF"; "NA"; "OC"; "AN"; "AS"; "EU"; "SA"];
            NameContinent = ["Africa"; "North America"; "Oceania"; "Antarctica"; "Asia"; "Europe"; "South America"];
            Area = [30065000; 24256000; 7687000; 13209000; 44579000; 9938000; 17819000]; // in km2
            NumberCountry = [54; 23; 14; %nan; 47; 45; 12]; 
            LifeExpectancy = [60; 78; 75; %nan; 72; 75; 74]; // in years

            t = table(Code, NameContinent, Area, NumberCountry, LifeExpectancy, ...
                "VariableNames", ["Code", "NameContinent", "Area", "NumberCountry", "LifeExpectancy"])
            st = table2struct(t)

            st = table2struct(t, "ToScalar", %t)
        ]]>
        </programlisting>
        </para>
    </refsection>
    <refsection role="see also">
        <title>See also</title>
        <simplelist type="inline">
            <member>
                <link linkend="table">table</link>
            </member>
            <member>
                <link linkend="matrix2table">matrix2table</link>
            </member>
        </simplelist>
    </refsection>
    <refsection role="history">
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>2024.0.0</revnumber>
                <revdescription>
                    Introduction in Scilab.
                </revdescription>
            </revision>
        </revhistory>
    </refsection>
</refentry>
