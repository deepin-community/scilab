<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * This file is released under the 3-clause BSD license. See COPYING-BSD.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" 
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" 
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" 
          version="5.0-subset Scilab" xml:id="duration" xml:lang="en">
    <refnamediv>
        <refname>duration</refname>
        <refpurpose>create a duration - duration in hours, minutes and seconds</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            d = duration(h, m, s)
            d = duration(h, m, s, ms)

            d = duration(x)

            d = duration(str)
            d = duration(str, "InputFormat", inputFormat)

            d = duration(..., "OutputFormat", outputFormat)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>h, m, s, ms</term>
                <listitem>
                    <para><emphasis role="bold">hour, minute, second, millisecond</emphasis></para>
                    <para>real scalar or matrix</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>m-by-3 matrix, [h, m, s]</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>str</term>
                <listitem>
                    <para>string, vector or matrix of strings</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>inputFormat</term>
                <listitem>
                    <para>format of str available: <emphasis role="bold">'dd:hh:mm:ss', 'hh:mm:ss', 'hh:mm', 'mm:ss', 'dd:hh:mm:ss.SSS', 'hh:mm:ss.SSS', 'mm:ss.SSS'</emphasis></para>
                    <para><emphasis role="bold">'hh:mm:ss'</emphasis> and <emphasis role="bold">"dd:hh:mm:ss"</emphasis> are the default input formats</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>outputFormat</term>
                <listitem>
                    <para>display format, string. <emphasis role="bold">'hh:mm:ss'</emphasis> is the default output format.</para>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>d</term>
                <listitem>
                    <para>duration object.</para>
                    <para/>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>The duration function represents an elapsed times as hours, minutes, seconds. It is possible to create 
        a duration in days (24 hours per day) and in years (365.2425 day per year (Georgian calendar)). For durations in calendar units, see the 
        <link linkend="calendarDuration"/> function.</para>
        <para><emphasis role="bold">d = duration(h, m, s [, ms])</emphasis> creates a duration object based 
        on h, m, s and ms if specified. </para>
        <para><emphasis role="bold">d = duration(x)</emphasis> creates a column duration object. x contains the hours, 
        minutes and seconds, one time unit per column.</para>
        <para><emphasis role="bold">d = duration(str)</emphasis> creates a duration object based on str writting either 
        <emphasis role="bold">hh:mm:ss, or dd:hh:mm:ss</emphasis>. If the format of str does not match the default formats, 
        then <emphasis role="bold">d = duration(str, 'InputFormat', inputFormat)</emphasis> has to be used.</para>
        <para>For each call of duration, it is possible to specify the display format by using 'OutputFormat' option that changes 
        only the display in Scilab console. The syntax to use is <emphasis role="bold">d = duration(..., 'OutputFormat', outputFormat).</emphasis></para>
        <para>Here is the list of available input and output formats: "dd:hh:mm:ss", "hh:mm:ss", "hh:mm", "mm:ss", 'dd:hh:mm:ss.SSS', 'hh:mm:ss.SSS', 'mm:ss.SSS'</para>
        <para><emphasis role="bold">duration([])</emphasis> creates a 0x0 duration object.</para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <para><emphasis role="bold">Empty duration</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
        duration([])
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">Create duration in hours, minutes, seconds, milliseconds</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
        // duration(h, 0, 0) == hours(h)
        d = duration(0:2:4, 0, 0)'

        // duration(0, mi, 0) == minutes(mi)
        d = duration(0, 0:15:60, 0)'

        // duration(0, 0, s) == seconds(s)
        d = duration(0, 0, 0:5:59)'

        // duration(0, 0, 0, ms) == milliseconds(ms)
        d = duration(0, 0, 0, 0:100:1000)
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">Create vectors or matrices of duration</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
        d = duration(12, 30, 45)
        d = duration(0:4:23, 0:10:59, 30)
        d = d'

        d = duration(12, 30, 45, 300)
        d = duration(0:4:23, 0:10:59, 0:10:59, 500)

        d = duration([12 30 45])
        d = duration([2 50 17; 6 22 23; 12 30 45])

        d = duration("12:30:45")
        d = duration(["2:50:17"; "6:22:23"; "12:30:45"])
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">With InputFormat</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
        d = duration("2:10:50:30", "InputFormat", "dd:hh:mm:ss")
        d = duration("10:50", "InputFormat", "hh:mm")
        d = duration("10:50", "InputFormat", "mm:ss")
        d = duration("10:50.500", "InputFormat", "mm:ss.SSS")
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">With OutputFormat</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
        d = duration("00:30:45", "OutputFormat", "mm:ss")
        d = duration("48:50", "InputFormat", "hh:mm", "OutputFormat", "dd:hh:mm:ss")
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">Extraction - insertion - computation</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
        d1 = duration("09:23:14");
        d2 = duration("14:06:57");
        d = [d1 d2]
        d = [d1; d2]
        d(1)
        d(1) = d1 + minutes(10)
        d + minutes(30)

        d = duration("00:00:00"):hours(2):duration("12:00:00");
        size(d)
        ]]>
        </programlisting>
        </para>
        <para><emphasis role="bold">With datetime function</emphasis></para>
        <para>
        <programlisting role="example"><![CDATA[
        dt = datetime(2022, 12, 25)
        h = duration(1:3:23, 30, 59)'
        dt + h

        datetime(2022, 12, 25):duration(1, 0, 0):datetime(2022, 12, 25, 12, 0, 0)
        datetime(2022, 12, 25):hours(6):datetime(2022, 12, 26, 12, 0, 0)
        ]]>
        </programlisting>
        </para>
    </refsection>
    <refsection role="see also">
        <title>See also</title>
        <simplelist type="inline">
            <member>
                <link linkend="hours">hours</link>
            </member>
            <member>
                <link linkend="minutes">minutes</link> — create a duration in minutes
            </member>
            <member>
                <link linkend="seconds">seconds</link> — create a duration in seconds
            </member>
            <member>
                <link linkend="milliseconds">milliseconds</link> — create a duration in milliseconds
            </member>
            <member>
                <link linkend="days">days</link> — create a duration in days
            </member>
            <member>
                <link linkend="years">years</link> — create a duration in years
            </member>
            <member>
                <link linkend="datetime">datetime</link>
            </member>
        </simplelist>
    </refsection>
    <refsection role="history">
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>2024.0.0</revnumber>
                <revdescription>
                    Introduction in Scilab.
                </revdescription>
            </revision>
        </revhistory>
    </refsection>
</refentry>
